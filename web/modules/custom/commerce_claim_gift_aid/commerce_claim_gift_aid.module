<?php

/**
 * @file
 * Contains commerce_claim_gift_aid.module.
 */

use Drupal\commerce_claim_gift_aid\GiftAidFieldDefinitionProvider;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\commerce_order\Entity\OrderItemType;

/**
 * Implements hook_entity_base_field_info_alter().
 */
function commerce_claim_gift_aid_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {

  if ($entity_type->id() == 'commerce_order') {
    // Adds a gift aid field onto orders.
    $fields['gift_aid'] = GiftAidFieldDefinitionProvider::getGiftAidField();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commerce_claim_gift_aid_form_commerce_order_item_type_form_alter(array &$form, FormStateInterface $form_state) {
  /* @var $order_item_type OrderItemType */
  $order_item_type = $form_state->getFormObject()->getEntity();
  $form['gift_aid'] = [
    '#type' => 'checkbox',
    '#title' => t('Order item is eligible for gift aid?'),
    '#weight' => 10,
    '#default_value' => $order_item_type->getThirdPartySetting('commerce_claim_gift_aid', 'gift_aid'),
  ];
  $form['#entity_builders'][] = 'commerce_claim_gift_aid_add';
}

/**
 * Handler for commerce_gift_aid_form_commerce_order_item_type_form_alter().
 *
 * @param string $entity_type
 *   The entity type as a string.
 * @param \Drupal\commerce_order\Entity\OrderItemType $commerce_order_item_type
 *   The config entity OrderItemType.
 * @param array $form
 *   The form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state.
 */
function commerce_claim_gift_aid_add($entity_type, OrderItemType $commerce_order_item_type, array &$form, FormStateInterface $form_state) {
  if ($entity_type == 'commerce_order_item_type') {
    $gift_aid = $form_state->getValue(['gift_aid']);
    $commerce_order_item_type->setThirdPartySetting('commerce_claim_gift_aid', 'gift_aid', $gift_aid);
    $commerce_order_item_type->save();
  }
}
